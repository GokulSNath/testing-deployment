name: Update version and Publish Package

on:
  workflow_dispatch:
    inputs:
      ReleaseType:
        description: 'Release Type'
        required: true
        default: 'warning'
        type: choice
        options:
        - Major
        - Feature
        - Bug

jobs:
  update-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm install

      - name: 'Set release type : ${{ inputs.ReleaseType }}'
        id: release_type
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ inputs.ReleaseType }}

      - name: Extract Current Branch and Validate
        id: get_current_branch
        shell: bash
        # run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        run: |
         BRANCH="${GITHUB_REF#refs/heads/}"
          if [ "$BRANCH" == 'main' ]
            then
              echo "Branch validation Successful"
            else
              echo "Releases only taken from main branch"
              exit 1
          fi

      - name: Get Latest version from package.json
        id: get_latest_version
        run: |
          # Get the latest version from package.json
          LATEST_VERSION=$(node -p "require('./package.json').version")

          # Output the latest version as a workflow variable
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.get_latest_version.outputs.latest_version }}
          version-fragment: ${{ steps.release_type.outputs.lowercase }}

      - name: Update version in package.json and Push latest release tag [v.${{ steps.bump_version.outputs.next-version }}]
        run: |
          OLD_VERSION=${{ steps.get_latest_version.outputs.latest_version }}
          NEW_VERSION=${{ steps.bump_version.outputs.next-version }}

          npm version $NEW_VERSION --no-git-tag-version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add package.json

          git commit -m "Bump version from $OLD_VERSION to $NEW_VERSION"
          git push origin HEAD:main

          git tag v$NEW_VERSION
          git push origin v$NEW_VERSION

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.next-version }}
          release_name: Release v${{ steps.bump_version.outputs.next-version }}
          # body: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false

      # - name: Bump package version and publish package
      #   uses: anothrNick/github-tag-action@v1.55.0
      #   with:
      #     github_token: ${{ secrets.PAT_FOR_TESTING_DEPLOYMENT_REPO }}
      #     tag: true
      #     push_tag: true
      #     tag_prefix: "v"
      #     bump: "minor"
      #     path: "package.json"
      #     commit: true
      #     push: true
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
